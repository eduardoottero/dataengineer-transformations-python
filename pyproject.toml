[tool.poetry]
name = "data_transformations"
version = "0.1.0"
description = "data transformations"
authors = ["ThoughtWorks <info@thoughtworks.com>"]
license = "Apache-License-2.0"

[tool.poetry.dependencies]
pandas = "^2.0.0"
pyarrow = "^21.0.0"
pyspark = "~4.0.0"
python = ">=3.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.4"
mypy = "^1.18.0"
ruff = "^0.14.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
include = ["data_transformations/**", "jobs/**", "tests/**"]
line-length = 88
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "I",   # isort
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

ignore = [
    "E501",    # line too long, handled by black
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex
    "S101",    # use of assert detected
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "T201",    # print found
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["data_transformations"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pylint]
max-args = 5
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.format]
# black aligned
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"